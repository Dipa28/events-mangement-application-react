{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive\\\\Desktop\\\\My Coding\\\\React JS\\\\Code\\\\Section 21- Single page application with multi page routing\\\\React_Router_Advanced\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, Link } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(EventItem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(request, params) {\n  const id = params.eventId;\n  console.log(id);\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","Link","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","id","eventId","console","log","response","fetch","ok","json","message","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive/Desktop/My Coding/React JS/Code/Section 21- Single page application with multi page routing/React_Router_Advanced/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, Link } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const params = useParams();\r\n  return <EventItem />;\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader(request, params) {\r\n  const id = params.eventId;\r\n  console.log(id);\r\n\r\n  const response = await fetch(\"http://localhost:8080/events\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not fetch details for selected event.\" });\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,oBAAOI,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACL,EAAA,CAHQD,eAAe;EAAA,QACPL,SAAS;AAAA;AAAAY,EAAA,GADjBP,eAAe;AAKxB,eAAeA,eAAe;AAE9B,OAAO,eAAeQ,MAAMA,CAACC,OAAO,EAAEP,MAAM,EAAE;EAC5C,MAAMQ,EAAE,GAAGR,MAAM,CAACS,OAAO;EACzBC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EAEf,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGL,EAAE,CAAC;EAEjE,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA8C,CAAC,CAAC;EACxE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}